generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Profile {
  bio            String
  avatar         String      @db.VarChar(255)
  entityId       String      @id @db.Uuid @map("entity_id")

  @@map(name: "profile")
}


model Access {
  attempts       Int         
  blocked        Boolean
  entityId       String      @id @db.Uuid @map("entity_id")

  @@map(name: "access")
}


model UserGroup {
  id             Int         @id() @default(autoincrement())
  group          String      @db.VarChar(32)

  student        Student?
  roles          Roles?
  employee       Employee?

  @@map(name: "user_group")
}


model Roles {
  id             Int         @id() @default(autoincrement())
  role           String      @db.VarChar(32)

  groupId        Int         @map("group_id")
  group          UserGroup   @relation(fields: [groupId], references: [id])

  @@map(name: "roles")
}


model Email {
  id             Int         @id() @default(autoincrement())
  advertising    Boolean     @db.Boolean()
  notifications  Boolean     @db.Boolean()
  primary        String      @db.VarChar(100)
  secondary      String      @db.VarChar(100)

  student        Student?
  employee       Employee?

  @@map(name: "email")
}


model Employee {
  id             String      @id @db.Uuid
  cpf            String      @db.VarChar(16)
  name           String      @db.VarChar(255)
  password       String      @db.VarChar(255)
  createdAt      DateTime    @map("created_at")

  groupId        Int         @map("group_id")
  group          UserGroup   @relation(fields: [groupId], references: [id])
  emailId        Int         @map("email_id")
  email          Email       @relation(fields: [emailId], references: [id])

  @@map(name: "employee")
}


model Student {
  id             String      @id @db.Uuid
  registration   String      @db.VarChar(32)
  grade          String      @db.VarChar(32)
  password       String      @db.VarChar(255)
  name           String      @db.VarChar(255)
  createdAt      DateTime    @map("created_at")

  groupId        Int         @map("group_id")
  group          UserGroup   @relation(fields: [groupId], references: [id])
  emailId        Int         @map("email_id")
  email          Email       @relation(fields: [emailId], references: [id])

  @@map(name: "student")
}