generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserGroup {
  id    Int    @id @default(autoincrement())
  group String @db.VarChar(32)

  user  User[]
  roles Roles[]

  @@map(name: "user_group")
}

model Roles {
  id   Int    @id @default(autoincrement())
  role String @db.VarChar(32)

  groupId Int       @map("group_id")
  group   UserGroup @relation(fields: [groupId], references: [id])

  @@map(name: "roles")
}

model Profile {
  bio       String
  avatar    String   @db.VarChar(255)
  updatedAt DateTime @updatedAt @map("updated_at")

  userId String @id @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "profile")
}

model ForgotPasswd {
  userId String @id @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  token     String   @db.VarChar(50)
  expiresIn DateTime @map("expires_in") @db.Timestamp

  @@map("forgot_passwd")
}

model LoginControl {
  attempts Int
  blocked  Boolean

  userId String @id @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "login_control")
}

model Email {
  id            Int     @id @default(autoincrement())
  primary       Boolean
  advertising   Boolean @db.Boolean
  notifications Boolean @db.Boolean
  email         String  @unique @db.VarChar(255)

  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  @@map(name: "email")
}

model User {
  id        String   @id @db.Uuid
  name      String   @db.VarChar(255)
  createdAt DateTime @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  cpf       String?  @db.VarChar(16)
  password  String   @db.VarChar(255)

  groupId   Int       @map("group_id")
  userGroup UserGroup @relation(fields: [groupId], references: [id])

  email Email[]

  student      Student?
  profile      Profile?
  loginControl LoginControl?
  forgotPasswd ForgotPasswd?

  @@map(name: "user")
}

model Student {
  userId       String @id @map("user_id") @db.Uuid
  registration String @db.VarChar(32)
  grade        String @db.VarChar(32)

  user User @relation(fields: [userId], references: [id])

  @@map(name: "student")
}
